#!/usr/bin/env ruby

# Almost everything here is stolen from Giles Bowkett's
# password gem. sudo gem install password for the original good shit.

require 'rubygems'
require 'optparse'

require "#{File.dirname(__FILE__)}/../lib/moat"
include Moat

load_passwords

option_parser = OptionParser.new do |option_parser|
  option_parser.on("-?", "--grep query", String) do |query|
    @query = query
    @action = :grep
  end

  option_parser.on("-a") do
    @action = :all
  end

  option_parser.on("-s", "--set site", String) do |site|
    @site = site
    @action = :set
  end

  option_parser.on("-g", "--get site", String) do |site|
    @site = site
    @action = :get
  end

  option_parser.on("-l", "--length length") do |length|
    @length = length.to_i - 1
  end

  option_parser.on("-G", "--generating_set site") do |site|
    @site = site
    @action = :set
    @length ||= 10
    @generated = generate(@length)
  end
end

username, password = option_parser.parse(ARGV)
password ||= @generated

def show_credentials_for(site)
  abort "No password stored for #{site}" unless Moat::SITES[site]
  puts site
  puts " username: #{Moat::SITES[site][:username]}"
  puts " password: #{Moat::SITES[site][:password]}"
end

case @action
when :get
  show_credentials_for(@site)
when :all
  Moat::SITES.keys.each {|site| show_credentials_for(site)}
when :set
  Moat::SITES[@site] = {:username => username, :password => password }
  show_credentials_for(@site) if @generated
  save_passwords
when :grep
  Moat::SITES.keys.each {|site| show_credentials_for(site) if site =~ /#{@query}/ }
end

